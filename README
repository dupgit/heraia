Compiling the program if you have the svn sources (the easy way)

 ./autoclean.sh
 ./autogen.sh
 ./configure
 make

Optional (system installation) :
 sudo make install

Now you can run the program (filename is a file of your own choice, for
instance src/heraia :) :
 src/heraia filename

If you have installed it :
 heraia filename

Please note :
If you downloaded the sources from the svn repository the
file heraia.csv does not mean anything (as it is not generated
for every commit - but only for distribution packages upon new
versions).

And also, if you have any question regarding heraia, please e-mail me at
heraia@delhomme.org


***** Reminding for code coverage *****

Code coverage and profiling tests do the following :
 ./configure --enable-gcov --enable-gprof --enable-debug
 make
 ./src/heraia src/heraia

Then do whatever you want with the program (eg. test the functions you
need to) and :

 cd src
 lcov -c -o coverage.info --directory=./
 genhtml coverage.info

open index.html generated file with your favorite web browser, and you're done.


***** Reminder for developpers *****

For a release do not forget to :

 - change configure.ac version number
 - heraia.h version number and date
 - heraia.c doxygen comment version number
 - generate the doxygen documentation in the docs directory. Edit
   heraia.doxygen file to reflect version number and directories (basicaly
   lines PROJECT_NUMBER and OUTPUT_DIRECTORY).
   Execute "doxygen heraia.doxygen"
   make a tar.gz available in the download directory (as for sources)
 - generate code coverage tests


DocBook : (Heraia uses JavaDoc Style with @ instead of \)

    * \see to do a see also comment
    * \param to document parameters
    * \return to document to result of a function
    * \struct to document a C-struct.
    * \union to document a union.
    * \enum to document an enumeration type.
    * \fn to document a function.
    * \var to document a variable or typedef or enum value.
    * \def to document a #define.
    * \typedef to document a type definition.
    * \file to document a file.
    * \namespace to document a namespace.
    * \brief to document briefly

See all available commands here :
http://www.stack.nl/~dimitri/doxygen/commands.html
